spring.application.name=payment-service
server.port=0
logging.level.root = info

stripe.secret.key=${STRIPE_SECRET_KEY}
stripe.webhook.secret=${STRIPE_WEBHOOK_SECRET}
#stripe login --api-key ${STRIPE_SECRET_KEY}
#stripe listen --forward-to localhost:8080/api/webhook/stripe

eureka.client.service-url.defaultZone= http://localhost:8761/eureka
eureka.client.register-with-eureka: true
eureka.client.fetch-registry: true
eureka.instance.prefer-ip-address: true
eureka.instance.lease-renewal-interval-in-seconds: 5
eureka.instance.lease-expiration-duration-in-seconds: 10

spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.jpa.hibernate.ddl-auto=${SPRING_JPA_HIBERNATE_DDL_AUTO}
spring.sql.init.mode=${SPRING_SQL_INIT_MODE}

grpc.client.courseService.address=discovery:///COURSE-SERVICE
grpc.client.courseService.enable-keep-alive=true
grpc.client.courseService.negotiation-type=plaintext

spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.ByteArrayDeserializer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.ByteArraySerializer
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS}