# Eureka client configuration
eureka.client.service-url.defaultZone= http://localhost:8761/eureka
eureka.client.register-with-eureka: true
eureka.client.fetch-registry: true
eureka.instance.prefer-ip-address: true
eureka.instance.lease-renewal-interval-in-seconds: 5
eureka.instance.lease-expiration-duration-in-seconds: 10

# Application name
spring.application.name=api-gateway
server.port=8080
logging.level.root = info
jwt.secret=${JWT_SECRET}

# Spring Cloud Gateway routes

# Auth Service Route
spring.cloud.gateway.routes[0].id=auth-service-route
spring.cloud.gateway.routes[0].uri=lb://AUTH-SERVICE
spring.cloud.gateway.routes[0].predicates[0]=Path=/auth/**
spring.cloud.gateway.routes[0].filters[0]=StripPrefix=1

# User Service Route - secured paths with JWT validation filter (higher priority)
spring.cloud.gateway.routes[1].id=user-service-secure-route
spring.cloud.gateway.routes[1].uri=lb://USER-SERVICE
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/users/profile, /api/users/profile/update
spring.cloud.gateway.routes[1].filters[0]=StripPrefix=1
spring.cloud.gateway.routes[1].filters[1]=JwtValidation

# User Service Route - general paths without JWT validation (lower priority)
spring.cloud.gateway.routes[2].id=user-service-general-route
spring.cloud.gateway.routes[2].uri=lb://USER-SERVICE
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/users/**
spring.cloud.gateway.routes[2].filters[0]=StripPrefix=1

# Course Service Route - secured paths with JWT validation filter (higher priority)
spring.cloud.gateway.routes[3].id=course-service-secure-route
spring.cloud.gateway.routes[3].uri=lb://COURSE-SERVICE
spring.cloud.gateway.routes[3].predicates[0]=Path=/api/courses/creator/**
spring.cloud.gateway.routes[3].filters[0]=StripPrefix=1
spring.cloud.gateway.routes[3].filters[1]=JwtValidation

# Course Service Route - general paths without JWT validation (lower priority)
spring.cloud.gateway.routes[4].id=course-service-secure-route
spring.cloud.gateway.routes[4].uri=lb://COURSE-SERVICE
spring.cloud.gateway.routes[4].predicates[0]=Path=/api/courses/public/**
spring.cloud.gateway.routes[4].filters[0]=StripPrefix=1

# Cloudinary Service Route
spring.cloud.gateway.routes[5].id=cloudinary-video-upload
spring.cloud.gateway.routes[5].uri=lb://CLOUDINARY-SERVICE
spring.cloud.gateway.routes[5].predicates[0]=Path=/api/media/video-upload
spring.cloud.gateway.routes[5].filters[0]=StripPrefix=1
